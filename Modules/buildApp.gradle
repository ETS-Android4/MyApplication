if (ConfigUtils.isApply(project)) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //javaCompileOptions {
        //    // 更新 build.gradle, 添加参数 AROUTER_GENERATE_DOC = enable
        //    // 生成的文档路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        //    annotationProcessorOptions {
        //        arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
        //    }
        //}
        ndk {
            // armeabi：万金油架构平台（占用率：0%）
            // armeabi-v7a：曾经主流的架构平台（占用率：10%）
            // arm64-v8a：目前主流架构平台（占用率：90%）
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    if (deps.gradle == "3.6.0") {
        viewBinding {
            enabled = true
        }
        dataBinding {
            enabled = true
        }
    } else {
        //gradle:4.1.0+
        buildFeatures {
            viewBinding = true
            dataBinding = true
        }
    }
    sourceSets {
        main {
            if (ConfigUtils.isApply(project)) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
}
kapt {
    arguments {
        // 路由框架译配置
        // module名称
        arg("AROUTER_MODULE_NAME", project.getName())
        // 是否生成路由文档，"enable"：生成文档，其他字符串不生成路由文档
        // arg("AROUTER_GENERATE_DOC", "enable")
    }
}
dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation project(path: ':module')
    //Android
    implementation deps.multidex
    implementation deps.material
    implementation deps.appcompat
    implementation deps.constraintlayout
    //ARouter
    implementation deps.arouter
    kapt deps.arouter_compiler
}
