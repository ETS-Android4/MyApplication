if (ConfigUtils.isApply(project)) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //javaCompileOptions {
        //    // 更新 build.gradle, 添加参数 AROUTER_GENERATE_DOC = enable
        //    // 生成的文档路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        //    annotationProcessorOptions {
        //        arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
        //    }
        //}
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("AROUTER_GENERATE_DOC": "enable")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            if (ConfigUtils.isApply(project)) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
}
dependencies {
    implementation project(path: ':module')
    //Android
    implementation deps.material
    implementation deps.appcompat
    implementation deps.constraintlayout
    //ARouter
    implementation deps.arouter
    annotationProcessor deps.arouter_compiler
}
